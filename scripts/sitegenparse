#!/bin/sh

if [ $# -ne 2 ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Usage: $1site PROJECT_BRANCH_PATH\n"
    echo -n "'$1site' part of sitegen scripts. "
    case $1 in
        install )
            echo "Activate install hooks for target project. Run tests for master branch wich option --autotest." ;;
        remove )
            echo "Activate remove hooks for target project and remove project dir." ;;
        update )
            echo "Activate update hooks for target project. Run tests for master branch wich option --autotest." ;;
        test )
            echo "Activate test hooks for target project. Enable test only master branch wich option --auto." ;;
    esac
    sitegen --version
    exit 0
fi

PROJECT_DIR=$1
ACTION=$2
TEMPLATE_FILE=$PROJECT_DIR/.sitegen
SERVICE_DIR=$PROJECT_DIR/service

# FIXME
_deactivate_ve () {
    ve="$VIRTUAL_ENV"
    if [ ! -z $ve  ]; then
        echo "Please deactivate VIRTUALENV '$VIRTUAL_ENV' first."
        exit 1
    fi
}

_verify_project_dir () {
    if [ ! -f $TEMPLATE_FILE ]; then
        echo "Error: sitegen project '$PROJECT_DIR' not found."
        return 1
    fi
}

_get_project_templates () {
    cat $TEMPLATE_FILE
}

_run_hooks () {
    template=$1
    action=$2
    for f in $SERVICE_DIR/${template}_*$action*.sh
    do
        if [ -f $f ]; then
            echo "Run $f\n----------" && sh $f && echo
        fi
    done
}

_action () {
    _verify_project_dir || return 1
    _deactivate_ve

    echo "Run $ACTION for '$PROJECT_DIR'\n=========="
    for t in $(_get_project_templates)
    do
        _run_hooks $t $ACTION
    done
}

_action

